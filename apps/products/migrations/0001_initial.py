# Generated by Django 5.2.7 on 2025-10-20 00:27

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BillingCycle',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Ex: "Cobrança Mensal", "Anual com 20% de Desconto".', max_length=100, unique=True, verbose_name='Nome da Oferta')),
                ('period', models.CharField(choices=[('MONTHLY', 'Mensal'), ('QUARTERLY', 'Trimestral'), ('SEMI_ANNUALLY', 'Semestral'), ('ANNUALLY', 'Anual')], max_length=15, verbose_name='Frequência de Cobrança')),
                ('discount_percentage', models.PositiveIntegerField(default=0, help_text='O incentivo que este ciclo oferece sobre o preço base.', verbose_name='Percentual de Desconto')),
            ],
            options={
                'verbose_name': 'Ciclo de Faturamento',
                'verbose_name_plural': 'Ciclos de Faturamento',
                'ordering': ['discount_percentage'],
            },
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Nome Legível')),
                ('code', models.CharField(help_text='Ex: SUBSCRIPTION_MODULE, IA_USAGE_CREDIT', max_length=50, unique=True, verbose_name='Código Interno')),
            ],
            options={
                'verbose_name': 'Tipo de Produto',
                'verbose_name_plural': 'Tipos de Produtos',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Nome do Módulo')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Identificador de URL')),
                ('description', models.TextField(verbose_name='Descrição da Funcionalidade')),
                ('icon', models.CharField(blank=True, help_text='O nome de um ícone para ser usado no frontend (ex: fas fa-users).', max_length=100, null=True, verbose_name='Ícone')),
                ('status', models.CharField(choices=[('DRAFT', 'Rascunho'), ('ACTIVE', 'Ativo'), ('ARCHIVED', 'Arquivado')], default='DRAFT', max_length=10, verbose_name='Status do Ciclo de Vida')),
                ('product_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.producttype', verbose_name='Categoria do Produto')),
            ],
            options={
                'verbose_name': 'Produto (Módulo)',
                'verbose_name_plural': 'Produtos (Módulos)',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductPlan',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Ex: "Plano Básico", "Plano Profissional".', max_length=100, verbose_name='Nome do Plano')),
                ('price', models.DecimalField(decimal_places=2, help_text='O preço antes de qualquer desconto do ciclo de faturamento.', max_digits=10, verbose_name='Preço Base')),
                ('features', models.JSONField(default=list, help_text='A lista de itens incluídos neste plano.', verbose_name='Lista de Funcionalidades')),
                ('status', models.CharField(choices=[('DRAFT', 'Rascunho'), ('ACTIVE', 'Ativo'), ('ARCHIVED', 'Arquivado')], default='DRAFT', max_length=10, verbose_name='Disponibilidade')),
                ('billing_cycle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.billingcycle', verbose_name='Ciclo de Faturamento')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plans', to='products.product', verbose_name='Produto (Módulo)')),
            ],
            options={
                'verbose_name': 'Plano de Produto',
                'verbose_name_plural': 'Planos de Produtos',
                'ordering': ['product', 'price'],
                'constraints': [models.UniqueConstraint(fields=('product', 'name', 'billing_cycle'), name='unique_product_plan_offer')],
            },
        ),
    ]
