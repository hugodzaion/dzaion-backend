# Generated by Django 5.2.7 on 2025-10-20 00:27

import django.core.validators
import django.db.models.deletion
import tenants.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contacts', '0001_initial'),
        ('guards', '0001_initial'),
        ('locations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('legal_name', models.CharField(help_text='O nome oficial para faturas e documentos legais. Obrigatório.', max_length=255, verbose_name='Razão Social / Nome Completo')),
                ('name', models.CharField(blank=True, help_text='O nome de exibição no sistema. Se não for preenchido, usará a Razão Social.', max_length=255, null=True, verbose_name='Nome Fantasia')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Identificador de URL')),
                ('document', models.CharField(max_length=14, unique=True, verbose_name='CPF/CNPJ')),
                ('type', models.CharField(choices=[('PF', 'Pessoa Física'), ('PJ', 'Pessoa Jurídica')], max_length=2, verbose_name='Tipo de Entidade')),
                ('logo', models.FileField(blank=True, null=True, upload_to=tenants.models.tenant_logo_directory_path, verbose_name='Logomarca')),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail Principal')),
                ('status', models.CharField(choices=[('ACTIVE', 'Ativo'), ('INACTIVE', 'Inativo'), ('SUSPENDED', 'Suspenso')], default='ACTIVE', max_length=10, verbose_name='Status')),
                ('billing_day', models.PositiveSmallIntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)], verbose_name='Melhor Dia para Pagamento')),
                ('street', models.CharField(max_length=255, verbose_name='Logradouro')),
                ('number', models.CharField(max_length=20, verbose_name='Número')),
                ('complement', models.CharField(blank=True, max_length=100, null=True, verbose_name='Complemento')),
                ('neighborhood', models.CharField(max_length=100, verbose_name='Bairro')),
                ('postal_code', models.CharField(max_length=9, verbose_name='CEP')),
                ('financial_contact', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='financial_tenants', to=settings.AUTH_USER_MODEL, verbose_name='Contato Financeiro')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='locations.location', verbose_name='Localidade (Cidade/Estado)')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='owned_tenants', to=settings.AUTH_USER_MODEL, verbose_name='Proprietário Legal')),
                ('parent', models.ForeignKey(blank=True, help_text='Se preenchido, este Inquilino é uma filial do Inquilino pai.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='branches', to='tenants.tenant', verbose_name='Matriz')),
            ],
            options={
                'verbose_name': 'Inquilino (Tenant)',
                'verbose_name_plural': 'Inquilinos (Tenants)',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TenantContact',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=255, verbose_name='Contato (Valor)')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='contacts.channelcontacts', verbose_name='Canal de Contato')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='tenants.tenant', verbose_name='Inquilino')),
            ],
            options={
                'verbose_name': 'Contato do Inquilino',
                'verbose_name_plural': 'Contatos do Inquilino',
                'ordering': ['channel__name'],
            },
        ),
        migrations.CreateModel(
            name='TenantLinkRequest',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('parent_document', models.CharField(help_text='O CNPJ do Inquilino ao qual se deseja vincular.', max_length=14, verbose_name='CNPJ da Matriz')),
                ('status', models.CharField(choices=[('PENDING', 'Pendente'), ('APPROVED', 'Aprovado'), ('REJECTED', 'Rejeitado')], default='PENDING', max_length=10, verbose_name='Status da Solicitação')),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='Processado em')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Aprovado por')),
                ('requesting_tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_link_requests', to='tenants.tenant', verbose_name='Inquilino Solicitante (Filial)')),
            ],
            options={
                'verbose_name': 'Solicitação de Vínculo de Matriz',
                'verbose_name_plural': 'Solicitações de Vínculo de Matriz',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TenantMembership',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('INVITED', 'Convidado'), ('ACTIVE', 'Ativo'), ('INACTIVE', 'Inativo')], default='INVITED', max_length=10, verbose_name='Status do Vínculo')),
                ('joined_at', models.DateTimeField(blank=True, null=True, verbose_name='Data de Ativação')),
                ('invited_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_invitations', to=settings.AUTH_USER_MODEL, verbose_name='Convidado por')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='guards.role', verbose_name='Papel (Cargo)')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='tenants.tenant', verbose_name='Inquilino')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to=settings.AUTH_USER_MODEL, verbose_name='Usuário (Membro)')),
            ],
            options={
                'verbose_name': 'Vínculo de Membro',
                'verbose_name_plural': 'Vínculos de Membros',
                'ordering': ['tenant__name', 'user__name'],
                'constraints': [models.UniqueConstraint(fields=('user', 'tenant'), name='unique_user_per_tenant')],
            },
        ),
    ]
